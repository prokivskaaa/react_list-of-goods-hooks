{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isResetButtonShown","isAlphabeticSort","ALPHABET","isLengthSort","LENGTH","goods","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","handleSort","type","className","classNames","onClick","currentReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAqBF,IAAaP,EAASM,MAAQF,EACnDM,EAAmBH,IAAaP,EAASW,SACzCC,EAAeL,IAAaP,EAASa,OAErCC,EArCD,SACLA,EADK,GAGJ,IADCP,EACF,EADEA,SAAUH,EACZ,EADYA,WAENW,EAAY,YAAOD,GAEnBJ,EAAmBH,IAAaP,EAASW,SACzCC,EAAeL,IAAaP,EAASa,OAE3C,QAAQ,GACN,KAAKH,EACHK,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC/C,MAEF,KAAKN,EACHG,EAAaC,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGG,OAASF,EAAGE,UAWjD,OAJIhB,GACFW,EAAaM,UAGRN,EAWOO,CAAkBrB,EAAiB,CAC/CM,WACAH,eAYImB,EAAa,SAACC,GAClBhB,EAAYgB,IAGd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWC,IAAW,SAAU,UAAW,CACzC,YAAahB,IAEfiB,QAAS,kBAAMJ,EAAWvB,EAASW,WALrC,iCAUA,wBACEa,KAAK,SACLC,UAAWC,IAAW,SAAU,aAAc,CAC5C,YAAad,IAEfe,QAAS,kBAAMJ,EAAWvB,EAASa,SALrC,4BAUA,wBACEW,KAAK,SACLC,UAAWC,IAAW,SAAU,aAAc,CAC5C,YAAatB,IAEfuB,QApCc,WACpBtB,GAAc,SAACuB,GAAD,OAAsBA,MA8BhC,qBAUCnB,GACC,wBACEe,KAAK,SACLC,UAAU,4BACVE,QAlDU,WAClBtB,GAAc,GACdG,EAAYR,EAASM,OA6Cf,sBAUJ,6BACGQ,EAAMe,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC/HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1c0b5c27.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  const isAlphabeticSort = sortType === SortType.ALPHABET;\n  const isLengthSort = sortType === SortType.LENGTH;\n\n  switch (true) {\n    case isAlphabeticSort:\n      visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case isLengthSort:\n      visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const isResetButtonShown = sortType !== SortType.NONE || isReversed;\n  const isAlphabeticSort = sortType === SortType.ALPHABET;\n  const isLengthSort = sortType === SortType.LENGTH;\n\n  const goods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const handleReverse = () => {\n    setIsReversed((currentReversed) => !currentReversed);\n  };\n\n  const handleSort = (type: SortType) => {\n    setSortType(type);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': !isAlphabeticSort,\n          })}\n          onClick={() => handleSort(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': !isLengthSort,\n          })}\n          onClick={() => handleSort(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonShown && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map((good) => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}